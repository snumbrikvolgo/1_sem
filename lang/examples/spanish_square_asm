JMP start
:0
R_PUSH RAX
PUSH 0
JE if0
PUSH 0
PUSH 1
SUB
R_PUSH RBX
MUL
R_PUSH RAX
DIV
R_POP RAX
R_PUSH RAX
OUT
JMP :jmp0
:if0
R_PUSH RBX
PUSH 0
JE if1
PUSH 1488
R_POP RAX
R_PUSH RAX
OUT
JMP :jmp1
:if1
PUSH 1
PUSH 0
DIV
R_POP RAX
R_PUSH RAX
OUT
:jmp0
:jmp1
RET

:1
R_PUSH RBX
R_PUSH RBX
MUL
PUSH 4
R_PUSH RAX
R_PUSH RCX
MUL
MUL
SUB
R_POP RDX
R_PUSH RDX
PUSH 0
JBE if2
PUSH 1488
R_POP RAX
R_PUSH RAX
OUT
JMP :jmp2
:if2
PUSH 0
PUSH 1
SUB
R_PUSH RBX
MUL
R_PUSH RDX
SQRT
ADD
PUSH 2
DIV
R_PUSH RAX
DIV
R_POP RCX
R_PUSH RCX
OUT
PUSH 0
PUSH 1
SUB
R_PUSH RBX
MUL
R_PUSH RDX
SQRT
SUB
PUSH 2
DIV
R_PUSH RAX
DIV
R_POP RCX
R_PUSH RCX
OUT
:jmp2
RET



BEGIN
:start
IN
R_POP RAX
IN
R_POP RBX
IN
R_POP RCX
R_PUSH RAX
PUSH 0
JE if3
R_PUSH RAX
R_PUSH RBX
R_PUSH RCX
R_PUSH RDX
CALL 1
JMP :jmp3
:if3
R_PUSH RBX
R_PUSH RCX
CALL 0
:jmp3
END
